name: Lint CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  issue_comment:
    types: [created]

jobs:
  clang-format:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        files:
        - "include/jwt-cpp/*.h"
        - "include/jwt-cpp/traits/**/*.h"
        - "tests/*.cpp"
        - "tests/**/*.cpp"
        - "example/*.cpp"
        - "example/**/*.cpp"
    steps:
      - if: github.event_name == 'issue_comment' && contains(github.event.comment.body, '//apply-linting')
        uses: dkershner6/reaction-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - run: sudo apt-get install clang-format
      - run: shopt -s globstar
      - uses: actions/checkout@v2
      - if: github.event_name == 'issue_comment' && contains(github.event.comment.body, '//apply-linting')
        run: hub pr checkout ${{ github.event.issue.number }} # Checking out 'issue_comment' does not pick the correct branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: clang-format -i ${{ matrix.files }}
      - if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' }}
        uses: ./.github/actions/comment-linting
        with:
          linter_name: clang-format
      - if: github.event_name == 'issue_comment' && contains(github.event.comment.body, '//apply-linting')
        uses: stefanzweifel/git-auto-commit-action@v4

  cmake-format:
    if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' }}
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        files: ["**/CMakeLists.txt", "cmake/code-coverage.cmake"]
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - run: pip install cmakelang
      - run: shopt -s globstar
      - uses: actions/checkout@v2
      - if: github.event_name == 'issue_comment' && contains(github.event.comment.body, '//apply-linting')
        run: hub pr checkout ${{ github.event.issue.number }} # Checking out 'issue_comment' does not pick the correct branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: cmake-format -i ${{ matrix.files }}
      - if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' }}
        uses: ./.github/actions/comment-linting
        with:
          linter_name: cmake-format
      - if: github.event_name == 'issue_comment' && contains(github.event.comment.body, '//apply-linting')
        uses: stefanzweifel/git-auto-commit-action@v4

  clang-tidy:
    if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' }}
    runs-on: ubuntu-20.04
    steps:
      - run: sudo apt-get install clang-tidy
      - uses: lukka/get-cmake@latest
      - uses: actions/checkout@v2
      - if: github.event_name == 'issue_comment' && contains(github.event.comment.body, '//apply-linting')
        run: hub pr checkout ${{ github.event.issue.number }} # Checking out 'issue_comment' does not pick the correct branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: configure
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_CXX_CLANG_TIDY="clang-tidy;-fix"

      - name: run
        working-directory: build
        run: make
      - if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' }}
        uses: ./.github/actions/comment-linting
        with:
          linter_name: clang-tidy
      - if: github.event_name == 'issue_comment' && contains(github.event.comment.body, '//apply-linting')
        uses: stefanzweifel/git-auto-commit-action@v4

  render-defaults:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        traits:
          - { name: "boost_json", library: "Boost.JSON", url: "https://github.com/boostorg/json", disable_pico: true }
          - { name: "danielaparker_jsoncons", library: "jsoncons", url: "https://github.com/danielaparker/jsoncons", disable_pico: true }
          - { name: "kazuho_picojson", library: "picojson", url: "https://github.com/kazuho/picojson", disable_pico: false }
          - { name: "nlohmann_json", library: "JSON for Modern C++", url: "https://github.com/nlohmann/json", disable_pico: true }
    name: render-defaults (${{ matrix.traits.name }})
    steps:
      - uses: actions/checkout@v2
      - if: github.event_name == 'issue_comment' && contains(github.event.comment.body, '//apply-linting')
        run: hub pr checkout ${{ github.event.issue.number }} # Checking out 'issue_comment' does not pick the correct branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: ./.github/actions/render/defaults
        with:
          traits_name: ${{ matrix.traits.name }}
          library_name: ${{ matrix.traits.library }}
          library_url: ${{ matrix.traits.url }}
          disable_default_traits: ${{ matrix.traits.disable_pico }}
      - run: git add include/jwt-cpp/traits/*
      - if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' }}
        uses: ./.github/actions/comment-linting
        with:
          linter_name: render-defaults
      - if: github.event_name == 'issue_comment' && contains(github.event.comment.body, '//apply-linting')
        uses: stefanzweifel/git-auto-commit-action@v4

  render-tests:
    if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' }}
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        traits:
          # - { name: "boost_json", suite: "BoostJsonTest" } # Currently needs work arounds for API limitations
          - { name: "danielaparker_jsoncons", suite: "JsonconsTest" }
          # - { name: "kazuho_picojson", suite: "PicoJsonTest" } # Currently the default everything tests against this!
          - { name: "nlohmann_json", suite: "NlohmannTest" }
    name: render-tests (${{ matrix.traits.name }})
    steps:
      - uses: actions/checkout@v2
      - if: github.event_name == 'issue_comment' && contains(github.event.comment.body, '//apply-linting')
        run: hub pr checkout ${{ github.event.issue.number }} # Checking out 'issue_comment' does not pick the correct branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: ./.github/actions/render/tests
        with:
          traits_name: ${{ matrix.traits.name }}
          test_suite_name: ${{ matrix.traits.suite }}
      - run: git add tests/traits/*
      - if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' }}
        uses: ./.github/actions/comment-linting
        with:
          linter_name: render-tests
      - if: github.event_name == 'issue_comment' && contains(github.event.comment.body, '//apply-linting')
        uses: stefanzweifel/git-auto-commit-action@v4
